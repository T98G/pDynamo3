/*==================================================================================================================================
! . The default integer type (at least 32 bit).
!=================================================================================================================================*/
# ifndef _INTEGER
# define _INTEGER

# include <limits.h>

/*----------------------------------------------------------------------------------------------------------------------------------
! . Definitions.
!---------------------------------------------------------------------------------------------------------------------------------*/
/* . Type. */
typedef int Integer ;

/* . Largest and smallest values. */
# define Integer_Largest  INT_MAX
# define Integer_Smallest INT_MIN

/* . Specific values. */
# define Integer_Initializer 0
# define Integer_Unknown     Integer_Largest

/*----------------------------------------------------------------------------------------------------------------------------------
! . Macros.
!---------------------------------------------------------------------------------------------------------------------------------*/
/* . Is the integer in range? Lower is inclusive and upper exclusive. */
# define Integer_IsInRange( self, lower, upper ) ( ( (self) >= (lower) ) && ( (self) < (upper) ) )

/* . Is the integer a valid capacity? */
# define Integer_IsValidCapacity( self ) ( (self) >= 0 )

/*----------------------------------------------------------------------------------------------------------------------------------
! . Functions.
!---------------------------------------------------------------------------------------------------------------------------------*/
extern Integer Integer_GCD ( Integer a, Integer b ) ;

# endif
